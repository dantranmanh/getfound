<?php
/**
 * Created by PhpStorm.
 * User: Pradip
 * Date: 29-07-2016
 * Time: 21:41
 */

class Location_City_Block_Notactive extends Location_City_Block_List
{
	protected $_cssPath = array();
    protected $_categoryCollection = null;
	protected $_categoryByCityStoreCollection = null;
	protected $_categoryByCityMerchantStoreCollection = null;

    
     protected function _construct()
    {
        parent::_construct(); // TODO: Change the autogenerated stub
        $this->_cssPath[] = array('skin_css' => 'css/state/style.css');
        $this->setTemplate('location/city/notactive.phtml');
    }
	    

    public function getCity(){
        $cityId = $this->getRequest()->getParam('id');
        if (!Mage::registry('current_city') && $cityId) {
            $stateInfo = Mage::getModel('city/city')->load($cityId);
            Mage::register('current_city', $stateInfo);
        }
        return Mage::registry('current_city');
    }

    public function getCategoryCollection() {
        try{
            if (is_null($this->_categoryCollection)) {
                $storeTable = Mage::getSingleton('core/resource')->getTableName('store/location_store');
                $categoryCollection = Mage::getModel('catalog/category')->getCollection()->addAttributeToSelect('*');
                $categoryCollection->addFieldToFilter(
                    'level', array('gt' => 1)
                );
				/*$categoryCollection->getSelect()->joinRight(
                    array('store_tb' => $storeTable),
                    'FIND_IN_SET(main_table.entity_id, store_tb.categories) '.
                    ' AND store_tb.city_id = '.$this->getCity()->getId(),
                    array()
                );*/
				//echo $activeCategory; exit;
                //Mage::log((string)$categoryCollection->getSelect(), null,'citysql.log',true);
                /*$categoryCollection->getSelect()->joinInner(
                    array('store_tb' => $storeTable),
                    'FIND_IN_SET(main_table.entity_id, store_tb.categories) AND store_tb.status = '.Location_Store_Model_Store::STATUS_ENABLE.
                    ' AND store_tb.city_id = '.$this->getCity()->getId(),
                    array()
                );*/
				
                $categoryCollection->getSelect()->group ('main_table.entity_id');

                $this->_categoryCollection = $categoryCollection;
            }
        } catch (Exception $e) {

        }
        return $this->_categoryCollection;
    }
	
	 public function getCategoryByCityStoreCollection($stateid) {
        try{
            if (is_null($this->_categoryByCityStoreCollection)) {
				
				$categoryByCityStoreCollection = Mage::getModel('store/store')->getCollection();
			    $categoryByCityStoreCollection->addFieldToSelect('*');
			    $categoryByCityStoreCollection->addFieldToFilter('city_id', array('eq' => $this->getCity()->getId()));
				$categoryByCityStoreCollection->addFieldToFilter('state_id', array('eq' => $stateid));	
              
                $this->_categoryByCityStoreCollection = $categoryByCityStoreCollection->getData();
            }
        } catch (Exception $e) {

        }
        return $this->_categoryByCityStoreCollection;
    }
	
	public function getCategoryByCityMerchantStoreCollection($stateid, $merchantId) {
        try{
            if (is_null($this->_categoryByCityMerchantStoreCollection)) {
				
				$categoryByCityMerchantStoreCollection = Mage::getModel('store/store')->getCollection();
			    $categoryByCityMerchantStoreCollection->addFieldToSelect('*');
			    $categoryByCityMerchantStoreCollection->addFieldToFilter('city_id', array('eq' => $this->getCity()->getId()));
				$categoryByCityMerchantStoreCollection->addFieldToFilter('state_id', array('eq' => $stateid));	
				$categoryByCityMerchantStoreCollection->addFieldToFilter('merchant_id', array('eq' => $merchantId));;
              	
                $this->_categoryByCityMerchantStoreCollection = $categoryByCityMerchantStoreCollection->getData();
            }
        } catch (Exception $e) {

        }
        return $this->_categoryByCityMerchantStoreCollection;
    }
	
    public function getState(){
        $stateId = $this->getCity()->getStateId();
        if (!Mage::registry('current_state') && $stateId) {
            $stateInfo = Mage::getModel('state/state')->load($stateId);
            Mage::register('current_state', $stateInfo);
        }
        return Mage::registry('current_state');
    }

    public function getCategoryStoreUrl($categoryId = null,$stateId) {
        return $this->getUrl('merchant/index/view', array('id'=>$categoryId,'cid'=>$this->getCity()->getId(),'sid'=>$stateId));
    }
}